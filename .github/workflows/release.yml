# test
name: Publish package to GitHub Packages
on: 
   push:
       tags:       
         - '*'

jobs:
  linux:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Build
      env:
         VERSION_SEMVER: ${{ steps.vars.outputs.tag }}
      run: bash package-linux_x64.sh
    - name: Upload math result for job Linux
      uses: actions/upload-artifact@v3
      with:
          name: linux-lib
          path: release/*

  windows:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - uses: ilammy/msvc-dev-cmd@v1
    - uses: microsoft/setup-msbuild@v1.1
    - uses: milliewalky/setup-7-zip@v1
    - name: Build
      env:
         VERSION_SEMVER: ${{ steps.vars.outputs.tag }}
      run: bash package-windows_x86_64.sh
    - name: Upload math result for job Windows
      uses: actions/upload-artifact@v3
      with:
          name: win-lib
          path: release/*
  macos-arm:
    runs-on: macos-14
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Build
      env:
         VERSION_SEMVER: ${{ steps.vars.outputs.tag }}
      run: bash package-macos.sh
    - name: Upload math result for job Mac
      uses: actions/upload-artifact@v3
      with:
          name: mac-lib-arm
          path: release/*
  macos:
    runs-on: macos-13
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Build
      env:
         VERSION_SEMVER: ${{ steps.vars.outputs.tag }}
      run: bash package-macos.sh
    - name: Upload math result for job Mac
      uses: actions/upload-artifact@v3
      with:
          name: mac-lib-x86
          path: release/*
  publish:
    runs-on: ubuntu-latest 
    needs: [macos,windows,linux]
    permissions: 
      contents: write
      packages: write 
    steps:
      - uses: actions/checkout@v3
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Check output
        env:
          VERSION_SEMVER: ${{ steps.vars.outputs.tag }}
        run: |
          echo $VERSION_SEMVER
          echo ${{ steps.vars.outputs.tag }}
      - name: Download math result for job Windows
        uses: actions/download-artifact@v3
        with:
          name: win-lib 
          path: .
      - name: Download math result for job Linux
        uses: actions/download-artifact@v3
        with:
          name: linux-lib 
          path: .
      - name: Download math result for job Mac-arm
        uses: actions/download-artifact@v3
        with:
          name: mac-lib-arm
          path: .
      - name: Download math result for job Mac-x86
        uses: actions/download-artifact@v3
        with:
          name: mac-lib-x86
          path: .
      - name: Check downloads
        run: |
          echo "Downloads:"
          ls -als
             
      - name: Make gitHub release
        uses: actions/create-release@v1
        id: create_release
        with:
               draft: false
               prerelease: false
               release_name: ${{ steps.version.outputs.version }}
               tag_name: ${{ github.ref }}
        env:
               GITHUB_TOKEN: ${{ github.token }}
               
      - name: upload Windows exe
        uses: actions/upload-release-asset@v1
        env:
               GITHUB_TOKEN: ${{ github.token }}
        with:
               upload_url: ${{ steps.create_release.outputs.upload_url }}
               asset_path: mujoco-java.jar
               asset_name: mujoco-java.jar
               asset_content_type: application/jar          
          
